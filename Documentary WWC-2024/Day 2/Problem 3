Q3: Remove Element

Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same. 
Then return the number of unique elements in nums.

//CODE

#include <iostream>
#include <vector>

using namespace std;

int removeDuplicates(vector<int>& nums) {
    if (nums.empty()) return 0; // Handle empty array case

    int uniqueIndex = 0; // Pointer for the position of unique elements

    // Start from the second element and compare with the previous one
    for (int i = 1; i < nums.size(); ++i) {
        if (nums[i] != nums[uniqueIndex]) { // Found a new unique element
            uniqueIndex++; // Move to the next position for unique element
            nums[uniqueIndex] = nums[i]; // Update the position with the new unique element
        }
    }

    return uniqueIndex + 1; // Return the count of unique elements
}

int main() {
    vector<int> nums = {1, 1, 2, 2, 3, 4, 4, 5}; // Example input

    int uniqueCount = removeDuplicates(nums);

    cout << "Number of unique elements: " << uniqueCount << endl;
    cout << "Array after removing duplicates: ";
    for (int i = 0; i < uniqueCount; ++i) {
        cout << nums[i] << " ";
    }
    cout << endl;

    return 0;
}
